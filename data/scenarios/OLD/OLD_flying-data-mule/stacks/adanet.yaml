version: "2.4"
services:

    glider:
        image: docker.io/chaos-whoi/whoi-slocum-adaptive-networking:master-${ARCH:?ARCH_NOT_SET}
        container_name: glider
        environment:
            DEBUG: 0
            WANDB_OFFLINE: 1
            WANDB_PROJECT: ${WANDB_PROJECT:?WANDB_PROJECT_NOT_SET}
        volumes:
            - type: bind
              source: ..
              target: /problem
        command: "source --problem /problem/glider-drone.yaml ${GLIDER_OPTS}"
        network_mode: ${GLIDER_NETWORK}

    drone-glider:
        image: docker.io/chaos-whoi/whoi-slocum-adaptive-networking:master-${ARCH:?ARCH_NOT_SET}
        container_name: glider-to-drone
        environment:
            DEBUG: 0
            WANDB_OFFLINE: 1
            WANDB_PROJECT: ${WANDB_PROJECT:?WANDB_PROJECT_NOT_SET}
        volumes:
            - type: bind
              source: ..
              target: /problem
        command: "sink --problem /problem/glider-drone.yaml ${GLIDER_DRONE_OPTS}"
        network_mode: ${GLIDER_DRONE_NETWORK}

    drone-shore:
        image: docker.io/chaos-whoi/whoi-slocum-adaptive-networking:master-${ARCH:?ARCH_NOT_SET}
        container_name: drone-to-shore
        environment:
            DEBUG: 0
            WANDB_OFFLINE: 1
            WANDB_PROJECT: ${WANDB_PROJECT:?WANDB_PROJECT_NOT_SET}
        volumes:
            - type: bind
              source: ..
              target: /problem
        command: "source --problem /problem/drone-shore.yaml ${DRONE_SHORE_OPTS}"
        network_mode: ${DRONE_SHORE_NETWORK}

    shore:
        image: docker.io/chaos-whoi/whoi-slocum-adaptive-networking:master-${ARCH:?ARCH_NOT_SET}
        container_name: shore
        environment:
            DEBUG: 0
            WANDB_OFFLINE: 1
            WANDB_PROJECT: ${WANDB_PROJECT:?WANDB_PROJECT_NOT_SET}
        volumes:
            - type: bind
              source: ..
              target: /problem
        command: "sink --problem /problem/drone-shore.yaml ${SHORE_OPTS}"
        network_mode: ${SHORE_NETWORK}
